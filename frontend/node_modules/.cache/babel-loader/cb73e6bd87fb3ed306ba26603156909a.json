{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"D:\\\\Instagram Reels\\\\Instagram-clone-MERN-stack-main\\\\frontend\\\\src\\\\components\\\\screens\\\\Home.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useState, useEffect, useContext } from 'react';\nimport { UserContext } from '../../App';\nimport { Link } from 'react-router-dom';\nimport moment from 'moment';\nimport ScrollToTop from './ScrollToTop/index';\nimport '../../App.css';\nimport M from 'materialize-css';\nimport Loading from './Loading';\nimport GoToTop from './ScrollToTop';\n\nconst ReadMore = ({\n  children\n}) => {\n  _s();\n\n  const text = children;\n  const [isReadMore, setIsReadMore] = useState(true);\n  const resultString = isReadMore ? text.slice(0, 150) : text;\n\n  const toggleReadMore = () => {\n    setIsReadMore(!isReadMore);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"p\", {\n    className: \"has-text-left\",\n    children: [resultString, /*#__PURE__*/_jsxDEV(\"span\", {\n      onClick: toggleReadMore,\n      className: \"tag\",\n      children: isReadMore ? '...read more' : '...show less'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ReadMore, \"ZXM2B4A2wvZoaix7Dpb8ksgPwlY=\");\n\n_c = ReadMore;\n\nconst Home = props => {\n  _s2();\n\n  const [data, setData] = useState([]);\n  const {\n    state,\n    dispatch\n  } = useContext(UserContext);\n  useEffect(() => {\n    fetch('/allpost', {\n      headers: {\n        \"Authorization\": \"Bearer \" + localStorage.getItem(\"jwt\")\n      }\n    }).then(res => res.json()).then(result => {\n      console.log(result);\n      setData(result.posts);\n    });\n  }, []);\n\n  const likePost = id => {\n    fetch('/like', {\n      method: \"put\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Authorization\": \"Bearer \" + localStorage.getItem(\"jwt\")\n      },\n      body: JSON.stringify({\n        postId: id\n      })\n    }).then(res => res.json()).then(result => {\n      //   console.log(result)\n      const newData = data.map(item => {\n        if (item._id == result._id) {\n          return result;\n        } else {\n          return item;\n        }\n      });\n      setData(newData);\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n\n  const unlikePost = id => {\n    fetch('/unlike', {\n      method: \"put\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Authorization\": \"Bearer \" + localStorage.getItem(\"jwt\")\n      },\n      body: JSON.stringify({\n        postId: id\n      })\n    }).then(res => res.json()).then(result => {\n      //   console.log(result)\n      const newData = data.map(item => {\n        if (item._id == result._id) {\n          return result;\n        } else {\n          return item;\n        }\n      });\n      setData(newData);\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n\n  const makeComment = (text, postId) => {\n    fetch('/comment', {\n      method: \"put\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Authorization\": \"Bearer \" + localStorage.getItem(\"jwt\")\n      },\n      body: JSON.stringify({\n        postId,\n        text\n      })\n    }).then(res => res.json()).then(result => {\n      console.log(result);\n      const newData = data.map(item => {\n        if (item._id == result._id) {\n          return result;\n        } else {\n          return item;\n        }\n      });\n      setData(newData);\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n\n  const deletePost = postid => {\n    fetch(`/deletepost/${postid}`, {\n      method: \"delete\",\n      headers: {\n        Authorization: \"Bearer \" + localStorage.getItem(\"jwt\")\n      }\n    }).then(res => res.json()).then(result => {\n      console.log(result);\n      const newData = data.filter(item => {\n        return item._id !== result._id;\n      });\n      setData(newData);\n    }).then(result => {\n      M.toast({\n        html: \"Your post Deleted Successfully\",\n        classes: \"#43a047 green darken-1\"\n      });\n    });\n  };\n\n  const deleteComment = (postid, commentid) => {\n    fetch(`/deletecomment/${postid}/${commentid}`, {\n      method: \"delete\",\n      headers: {\n        Authorization: \"Bearer \" + localStorage.getItem(\"jwt\")\n      }\n    }).then(res => res.json()).then(result => {\n      const newData = data.map(item => {\n        if (item._id == result._id) {\n          return result;\n        } else {\n          return item;\n        }\n      });\n      setData(newData);\n    }).then(result => {\n      M.toast({\n        html: \"Your comment Deleted Successfully\",\n        classes: \"#43a047 green darken-1\"\n      });\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"home\",\n      children: data && data.length ? data.map(item => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card home-card\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              position: \"relative\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              className: \"setting\",\n              src: item.postedBy.pic\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 167,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n              style: {\n                padding: \"-2px\"\n              },\n              children: [/*#__PURE__*/_jsxDEV(Link, {\n                className: \"link-setting\",\n                to: item.postedBy._id !== state._id ? \"/profile/\" + item.postedBy._id : \"/profile\",\n                children: item.postedBy.username\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 169,\n                columnNumber: 8\n              }, this), item.postedBy._id == state._id && /*#__PURE__*/_jsxDEV(\"i\", {\n                className: \"material-icons img11\",\n                onClick: () => {\n                  deletePost(item._id);\n                },\n                children: \"delete\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 171,\n                columnNumber: 32\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 168,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card-image mar\",\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              style: {\n                maxHeight: \"500px\"\n              },\n              src: item.photo\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 179,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 178,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card-content\",\n            children: [/*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"material-icons\",\n              style: {\n                color: \"red\"\n              },\n              children: \"favorite\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 182,\n              columnNumber: 29\n            }, this), item.likes.includes(state._id) ? /*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"material-icons\",\n              onClick: () => {\n                unlikePost(item._id);\n              },\n              children: \"thumb_down\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 185,\n              columnNumber: 30\n            }, this) : /*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"material-icons\",\n              onClick: () => {\n                likePost(item._id);\n              },\n              children: \"thumb_up\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 189,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"h6\", {\n              children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                children: [item.likes.length, \" likes \\xA0\", item.comments.length, \" comments\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 195,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 195,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"h6\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: [/*#__PURE__*/_jsxDEV(Link, {\n                  to: item.postedBy._id !== state._id ? \"/profile/\" + item.postedBy._id : \"/profile\",\n                  children: item.postedBy.username\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 196,\n                  columnNumber: 19\n                }, this), \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 196,\n                columnNumber: 11\n              }, this), \"\\xA0\", /*#__PURE__*/_jsxDEV(ReadMore, {\n                children: item.body\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 197,\n                columnNumber: 13\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 196,\n              columnNumber: 7\n            }, this), item.comments.length == 0 ? /*#__PURE__*/_jsxDEV(\"h6\", {\n              children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"No comments yet..\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 198,\n                columnNumber: 34\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 198,\n              columnNumber: 30\n            }, this) : item.comments.length === 1 ? /*#__PURE__*/_jsxDEV(\"h6\", {\n              children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"View 1 comment\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 198,\n                columnNumber: 103\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 198,\n              columnNumber: 99\n            }, this) : /*#__PURE__*/_jsxDEV(\"h6\", {\n              children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                children: [\"View all \", item.comments.length, \" comments\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 199,\n                columnNumber: 13\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 199,\n              columnNumber: 9\n            }, this), item.comments.map(record => {\n              return /*#__PURE__*/_jsxDEV(\"h6\", {\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  style: {\n                    fontWeight: \"500\"\n                  },\n                  children: /*#__PURE__*/_jsxDEV(Link, {\n                    to: record.postedBy._id !== state._id ? \"/profile/\" + record.postedBy._id : \"/profile\",\n                    children: record.postedBy.username\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 206,\n                    columnNumber: 1\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 205,\n                  columnNumber: 41\n                }, this), \" \", record.text, (item.postedBy._id === state._id || record.postedBy._id === state._id) && /*#__PURE__*/_jsxDEV(\"i\", {\n                  className: \"material-icons\",\n                  style: {\n                    float: \"right\"\n                  },\n                  onClick: () => deleteComment(item._id, record._id),\n                  children: \"delete\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 212,\n                  columnNumber: 43\n                }, this)]\n              }, record._id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 204,\n                columnNumber: 41\n              }, this);\n            }), /*#__PURE__*/_jsxDEV(\"form\", {\n              onSubmit: e => {\n                e.preventDefault();\n                makeComment(e.target[0].value, item._id);\n                e.target[0].value = \"\";\n              },\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                placeholder: \"add a comment\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 231,\n                columnNumber: 35\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 226,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 233,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                children: [\"Posted on \", moment(item.date).format('MMMM Do YYYY')]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 234,\n                columnNumber: 36\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 234,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 181,\n            columnNumber: 29\n          }, this)]\n        }, item._id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 17\n        }, this);\n      }) : /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 241,\n          columnNumber: 16\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          style: {\n            textAlign: \"center\"\n          },\n          children: \"No posts yet..\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 242,\n          columnNumber: 16\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 240,\n        columnNumber: 16\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 8\n    }, this), /*#__PURE__*/_jsxDEV(GoToTop, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 248,\n      columnNumber: 8\n    }, this), /*#__PURE__*/_jsxDEV(ScrollToTop, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 249,\n      columnNumber: 8\n    }, this)]\n  }, void 0, true);\n};\n\n_s2(Home, \"kLS/0ojS7ut9bSkV1n2Vnvv0y/8=\");\n\n_c2 = Home;\nexport default Home;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"ReadMore\");\n$RefreshReg$(_c2, \"Home\");","map":{"version":3,"sources":["D:/Instagram Reels/Instagram-clone-MERN-stack-main/frontend/src/components/screens/Home.js"],"names":["React","useState","useEffect","useContext","UserContext","Link","moment","ScrollToTop","M","Loading","GoToTop","ReadMore","children","text","isReadMore","setIsReadMore","resultString","slice","toggleReadMore","Home","props","data","setData","state","dispatch","fetch","headers","localStorage","getItem","then","res","json","result","console","log","posts","likePost","id","method","body","JSON","stringify","postId","newData","map","item","_id","catch","err","unlikePost","makeComment","deletePost","postid","Authorization","filter","toast","html","classes","deleteComment","commentid","length","position","postedBy","pic","padding","username","maxHeight","photo","color","likes","includes","comments","record","fontWeight","float","e","preventDefault","target","value","date","format","textAlign"],"mappings":"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","sourcesContent":["import React,{useState,useEffect,useContext} from 'react'\r\nimport {UserContext} from '../../App'\r\nimport {Link} from 'react-router-dom'\r\nimport moment from 'moment'\r\nimport ScrollToTop from './ScrollToTop/index';\r\nimport '../../App.css';\r\nimport M from 'materialize-css'\r\nimport Loading from './Loading'\r\nimport GoToTop from './ScrollToTop';\r\nconst ReadMore = ({children}) => {\r\n    const text = children;\r\n    const [isReadMore, setIsReadMore] = useState(true);\r\n    const resultString = isReadMore ? text.slice(0, 150) : text;\r\n    const toggleReadMore = () =>{\r\n        setIsReadMore(!isReadMore);\r\n    }\r\n    return (\r\n        <p className='has-text-left'>\r\n        {resultString}\r\n        <span onClick={toggleReadMore} className=\"tag\">\r\n        {isReadMore ? '...read more' : '...show less'}\r\n        </span>\r\n        </p>\r\n    )\r\n}\r\nconst Home  = (props) =>{\r\n    const [data,setData] = useState([])\r\n    const {state,dispatch} = useContext(UserContext)\r\n    useEffect(()=>{\r\n       fetch('/allpost',{\r\n           headers:{\r\n               \"Authorization\":\"Bearer \"+localStorage.getItem(\"jwt\")\r\n           }\r\n       }).then(res=>res.json())\r\n       .then(result=>{\r\n           console.log(result)\r\n           setData(result.posts)\r\n       })\r\n    },[])\r\n\r\n    const likePost = (id)=>{\r\n          fetch('/like',{\r\n              method:\"put\",\r\n              headers:{\r\n                  \"Content-Type\":\"application/json\",\r\n                  \"Authorization\":\"Bearer \"+localStorage.getItem(\"jwt\")\r\n              },\r\n              body:JSON.stringify({\r\n                  postId:id\r\n              })\r\n          }).then(res=>res.json())\r\n          .then(result=>{\r\n                   //   console.log(result)\r\n            const newData = data.map(item=>{\r\n                if(item._id==result._id){\r\n                    return result\r\n                }else{\r\n                    return item\r\n                }\r\n            })\r\n            setData(newData)\r\n          }).catch(err=>{\r\n              console.log(err)\r\n          })\r\n    }\r\n    const unlikePost = (id)=>{\r\n          fetch('/unlike',{\r\n              method:\"put\",\r\n              headers:{\r\n                  \"Content-Type\":\"application/json\",\r\n                  \"Authorization\":\"Bearer \"+localStorage.getItem(\"jwt\")\r\n              },\r\n              body:JSON.stringify({\r\n                  postId:id\r\n              })\r\n          }).then(res=>res.json())\r\n          .then(result=>{\r\n            //   console.log(result)\r\n            const newData = data.map(item=>{\r\n                if(item._id==result._id){\r\n                    return result\r\n                }else{\r\n                    return item\r\n                }\r\n            })\r\n            setData(newData)\r\n          }).catch(err=>{\r\n            console.log(err)\r\n        })\r\n    }\r\n\r\n    const makeComment = (text,postId)=>{\r\n          fetch('/comment',{\r\n              method:\"put\",\r\n              headers:{\r\n                  \"Content-Type\":\"application/json\",\r\n                  \"Authorization\":\"Bearer \"+localStorage.getItem(\"jwt\")\r\n              },\r\n              body:JSON.stringify({\r\n                  postId,\r\n                  text\r\n              })\r\n          }).then(res=>res.json())\r\n          .then(result=>{\r\n              console.log(result)\r\n              const newData = data.map(item=>{\r\n                if(item._id==result._id){\r\n                    return result\r\n                }else{\r\n                    return item\r\n                }\r\n             })\r\n            setData(newData)\r\n          }).catch(err=>{\r\n              console.log(err)\r\n          })\r\n    }\r\n\r\n    const deletePost = (postid)=>{\r\n        fetch(`/deletepost/${postid}`,{\r\n            method:\"delete\",\r\n            headers:{\r\n                Authorization:\"Bearer \"+localStorage.getItem(\"jwt\")\r\n            }\r\n        }).then(res=>res.json())\r\n        .then(result=>{\r\n            console.log(result)\r\n            const newData = data.filter(item=>{\r\n                return item._id !== result._id\r\n            })\r\n            setData(newData)\r\n        }).then(result=>{\r\n            M.toast({html:\"Your post Deleted Successfully\",classes:\"#43a047 green darken-1\"})\r\n        })\r\n    }\r\n    const deleteComment = (postid, commentid) => {\r\n   \r\n        fetch(`/deletecomment/${postid}/${commentid}`, {\r\n          method: \"delete\",\r\n          headers: {\r\n            Authorization: \"Bearer \" + localStorage.getItem(\"jwt\"),\r\n          },\r\n        })\r\n          .then((res) => res.json())\r\n          .then((result) => {\r\n                 const newData = data.map((item) => {\r\n    \r\n              if (item._id == result._id) {\r\n                         return result;\r\n              } else {\r\n                return item;\r\n              }\r\n            });\r\n            setData(newData);\r\n          }).then(result=>{\r\n            M.toast({html:\"Your comment Deleted Successfully\",classes:\"#43a047 green darken-1\"})\r\n        })\r\n      };\r\n   return (\r\n       <>\r\n       <div className=\"home\">\r\n           {\r\n            data&&data.length?data.map(item=>{\r\n                   return(\r\n                <div className=\"card home-card\" key={item._id}>\r\n                <div style={{ position:\"relative\" }}>\r\n          <img className=\"setting\" src={item.postedBy.pic} />\r\n                <h5 style={{padding:\"-2px\"}}>\r\n       <Link className=\"link-setting\" to={item.postedBy._id !== state._id?\"/profile/\"+item.postedBy._id :\"/profile\"}>{item.postedBy.username}</Link> \r\n                            {item.postedBy._id == state._id \r\n                            && <i className=\"material-icons img11\" \r\n                            onClick={()=>{\r\n                                deletePost(item._id);\r\n                            } }\r\n                            >delete</i>\r\n\r\n                            }</h5></div>\r\n                            <div className=\"card-image mar\">\r\n                                <img style={{maxHeight:\"500px\"}} src={item.photo}/>\r\n                            </div>\r\n                            <div className=\"card-content\">\r\n                            <i className=\"material-icons\" style={{color:\"red\"}}>favorite</i>\r\n                            {item.likes.includes(state._id)\r\n                            ? \r\n                             <i className=\"material-icons\"\r\n                                    onClick={()=>{unlikePost(item._id)}}\r\n                              >thumb_down</i>\r\n                            : \r\n                            <i className=\"material-icons\"\r\n                            onClick={()=>{likePost(item._id)}}\r\n                            >thumb_up</i>\r\n                            }\r\n                            \r\n                           \r\n                            <h6><strong>{item.likes.length} likes &nbsp;{item.comments.length} comments</strong></h6>\r\n      <h6><strong><Link to={item.postedBy._id !== state._id?\"/profile/\"+item.postedBy._id :\"/profile\"  }>{item.postedBy.username}</Link> </strong>\r\n      &nbsp;<ReadMore>{item.body}</ReadMore></h6>\r\n    {item.comments.length==0?<h6><strong>No comments yet..</strong></h6>:item.comments.length===1?<h6><strong>View 1 comment</strong></h6>:\r\n        <h6><strong>View all {item.comments.length} comments</strong></h6>}               \r\n                                {\r\n                                    item.comments.map(record=>{\r\n                                        return(\r\n                                      \r\n                                        <h6 key={record._id}>\r\n                                        <span style={{ fontWeight: \"500\" }}>\r\n<Link to={record.postedBy._id !== state._id?\"/profile/\"+record.postedBy._id :\"/profile\"  }>{record.postedBy.username}</Link>  \r\n                                        </span>{\" \"}\r\n                                        {record.text}\r\n        { (item.postedBy._id===state._id  || record.postedBy._id===state._id)\r\n            \r\n                             && (\r\n                                          <i\r\n                                            className=\"material-icons\"\r\n                                            style={{\r\n                                              float: \"right\",\r\n                                            }}\r\n                                            onClick={() => deleteComment(item._id, record._id)}\r\n                                          >\r\n                                            delete\r\n                                          </i>\r\n                                        )}\r\n                                      </h6>\r\n                                        )\r\n                                    })\r\n                                }\r\n                                <form onSubmit={(e)=>{\r\n                                    e.preventDefault()\r\n                                    makeComment(e.target[0].value,item._id)\r\n                                    e.target[0].value=\"\"\r\n                                }}>\r\n                                  <input type=\"text\" placeholder=\"add a comment\" />  \r\n                                </form>\r\n                                <br></br>\r\n                                <p><strong>Posted on {moment(item.date).format('MMMM Do YYYY')}</strong></p>\r\n                            </div>\r\n                        </div> \r\n                   )\r\n               })\r\n               : \r\n               <div>\r\n               <Loading/>\r\n               <h1 style={{textAlign:\"center\"}}>No posts yet..</h1>\r\n               </div>\r\n           }\r\n          \r\n          \r\n       </div>\r\n       <GoToTop />\r\n       <ScrollToTop />\r\n       </>\r\n   )\r\n}\r\n\r\n\r\nexport default Home"]},"metadata":{},"sourceType":"module"}