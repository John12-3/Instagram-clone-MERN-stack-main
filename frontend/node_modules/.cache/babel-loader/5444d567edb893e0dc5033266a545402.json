{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"D:\\\\Instagram Reels\\\\Instagram-clone-MERN-stack-main\\\\frontend\\\\src\\\\components\\\\screens\\\\CreatePost.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport M from 'materialize-css';\nimport { useHistory } from 'react-router-dom';\nimport '../../App.css';\n\nconst CreatePost = () => {\n  _s();\n\n  const history = useHistory();\n  const [body, setBody] = useState(\"\");\n  const [image, setImage] = useState(\"\");\n  const [url, setUrl] = useState(\"\");\n  useEffect(() => {\n    if (url) {\n      fetch(\"/createPost\", {\n        method: \"post\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          \"Authorization\": \"Bearer \" + localStorage.getItem(\"jwt\")\n        },\n        body: JSON.stringify({\n          body,\n          pic: url\n        })\n      }).then(res => res.json()).then(data => {\n        if (data.error) {\n          M.toast({\n            html: data.error,\n            classes: \"#c62828 red darken-3\"\n          });\n        } else {\n          M.toast({\n            html: \"Created post Successfully\",\n            classes: \"#43a047 green darken-1\"\n          });\n          history.push('/');\n        }\n      }).catch(err => {\n        console.log(err);\n      });\n    }\n  }, [url]);\n\n  const postDetails = () => {\n    const data = new FormData();\n    const unsignedUploadPreset = \"mypreset\"; // fictional preset name here\n\n    data.append(\"file\", image);\n    data.append(\"upload_preset\", \"insta-clone\");\n    data.append(\"cloud_name\", \"dnvtlgaf6\"); //\n\n    fetch(\"https://api.cloudinary.com/v1_1/dnvtlgaf6/image/upload\", {\n      method: \"post\",\n      body: data\n    }).then(res => res.json()).then(data => {\n      setUrl(data.url);\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"card okk input-field\",\n    children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n      className: \"textarea card\",\n      cols: \"30\",\n      rows: \"5\",\n      type: \"text\",\n      placeholder: \"Write a caption\",\n      value: body,\n      onChange: e => setBody(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"file-field input-field\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"btn #64b5f6 blue darken-1\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Upload Image\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          onChange: e => {\n            var file = e.target.files[0];\n            var t = file.type.split('/').pop().toLowerCase();\n\n            if (t != \"jpeg\" && t != \"jpg\" && t != \"png\") {\n              M.toast({\n                html: \"Image Format is invalid\",\n                classes: \"#c62828 red darken-3\"\n              });\n              return;\n            }\n\n            setImage(e.target.files[0]);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"file-path-wrapper\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"file-path validate\",\n          type: \"text\",\n          placeholder: \"jpg/jpeg/png\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn #64b5f6 blue darken-1\",\n      onClick: () => postDetails(),\n      children: \"Post Image\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 9\n  }, this);\n};\n\n_s(CreatePost, \"je+QvUTB2g8iz3dA8Q3+kKfO2VU=\", false, function () {\n  return [useHistory];\n});\n\n_c = CreatePost;\nexport default CreatePost;\n\nvar _c;\n\n$RefreshReg$(_c, \"CreatePost\");","map":{"version":3,"sources":["D:/Instagram Reels/Instagram-clone-MERN-stack-main/frontend/src/components/screens/CreatePost.js"],"names":["React","useState","useEffect","M","useHistory","CreatePost","history","body","setBody","image","setImage","url","setUrl","fetch","method","headers","localStorage","getItem","JSON","stringify","pic","then","res","json","data","error","toast","html","classes","push","catch","err","console","log","postDetails","FormData","unsignedUploadPreset","append","e","target","value","file","files","t","type","split","pop","toLowerCase"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,CAAP,MAAc,iBAAd;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,OAAO,eAAP;;AACA,MAAMC,UAAU,GAAG,MAAM;AAAA;;AACrB,QAAMC,OAAO,GAAGF,UAAU,EAA1B;AACA,QAAM,CAACG,IAAD,EAAOC,OAAP,IAAkBP,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACQ,KAAD,EAAQC,QAAR,IAAoBT,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACU,GAAD,EAAMC,MAAN,IAAgBX,QAAQ,CAAC,EAAD,CAA9B;AACAC,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAIS,GAAJ,EAAS;AACLE,MAAAA,KAAK,CAAC,aAAD,EAAgB;AACjBC,QAAAA,MAAM,EAAE,MADS;AAEjBC,QAAAA,OAAO,EAAE;AACL,0BAAgB,kBADX;AAEL,2BAAiB,YAAYC,YAAY,CAACC,OAAb,CAAqB,KAArB;AAFxB,SAFQ;AAMjBV,QAAAA,IAAI,EAAEW,IAAI,CAACC,SAAL,CAAe;AACjBZ,UAAAA,IADiB;AAEjBa,UAAAA,GAAG,EAAET;AAFY,SAAf;AANW,OAAhB,CAAL,CAUGU,IAVH,CAUQC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EAVf,EAWKF,IAXL,CAWUG,IAAI,IAAI;AAEV,YAAIA,IAAI,CAACC,KAAT,EAAgB;AACZtB,UAAAA,CAAC,CAACuB,KAAF,CAAQ;AAAEC,YAAAA,IAAI,EAAEH,IAAI,CAACC,KAAb;AAAoBG,YAAAA,OAAO,EAAE;AAA7B,WAAR;AACH,SAFD,MAGK;AACDzB,UAAAA,CAAC,CAACuB,KAAF,CAAQ;AAAEC,YAAAA,IAAI,EAAE,2BAAR;AAAqCC,YAAAA,OAAO,EAAE;AAA9C,WAAR;AACAtB,UAAAA,OAAO,CAACuB,IAAR,CAAa,GAAb;AACH;AACJ,OApBL,EAoBOC,KApBP,CAoBaC,GAAG,IAAI;AACZC,QAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACH,OAtBL;AAuBH;AACJ,GA1BQ,EA0BN,CAACpB,GAAD,CA1BM,CAAT;;AA2BA,QAAMuB,WAAW,GAAG,MAAM;AACtB,UAAMV,IAAI,GAAG,IAAIW,QAAJ,EAAb;AACA,UAAMC,oBAAoB,GAAG,UAA7B,CAFsB,CAEkB;;AACxCZ,IAAAA,IAAI,CAACa,MAAL,CAAY,MAAZ,EAAoB5B,KAApB;AACAe,IAAAA,IAAI,CAACa,MAAL,CAAY,eAAZ,EAA6B,aAA7B;AACAb,IAAAA,IAAI,CAACa,MAAL,CAAY,YAAZ,EAA0B,WAA1B,EALsB,CAMtB;;AACAxB,IAAAA,KAAK,CAAC,wDAAD,EAA2D;AAC5DC,MAAAA,MAAM,EAAE,MADoD;AAE5DP,MAAAA,IAAI,EAAEiB;AAFsD,KAA3D,CAAL,CAIKH,IAJL,CAIUC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EAJjB,EAKKF,IALL,CAKUG,IAAI,IAAI;AACVZ,MAAAA,MAAM,CAACY,IAAI,CAACb,GAAN,CAAN;AACH,KAPL,EAQKmB,KARL,CAQWC,GAAG,IAAI;AACVC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACH,KAVL;AAWH,GAlBD;;AAmBA,sBACI;AAAK,IAAA,SAAS,EAAC,sBAAf;AAAA,4BAEI;AAAU,MAAA,SAAS,EAAC,eAApB;AACI,MAAA,IAAI,EAAC,IADT;AACc,MAAA,IAAI,EAAC,GADnB;AAEI,MAAA,IAAI,EAAC,MAFT;AAGI,MAAA,WAAW,EAAC,iBAHhB;AAII,MAAA,KAAK,EAAExB,IAJX;AAKI,MAAA,QAAQ,EAAG+B,CAAD,IAAO9B,OAAO,CAAC8B,CAAC,CAACC,MAAF,CAASC,KAAV;AAL5B;AAAA;AAAA;AAAA;AAAA,YAFJ,eASI;AAAK,MAAA,SAAS,EAAC,wBAAf;AAAA,8BACI;AAAK,QAAA,SAAS,EAAC,2BAAf;AAAA,gCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAO,UAAA,IAAI,EAAC,MAAZ;AAAmB,UAAA,QAAQ,EAAGF,CAAD,IAAO;AAChC,gBAAIG,IAAI,GAAGH,CAAC,CAACC,MAAF,CAASG,KAAT,CAAe,CAAf,CAAX;AACA,gBAAIC,CAAC,GAAGF,IAAI,CAACG,IAAL,CAAUC,KAAV,CAAgB,GAAhB,EAAqBC,GAArB,GAA2BC,WAA3B,EAAR;;AACA,gBAAIJ,CAAC,IAAI,MAAL,IAAeA,CAAC,IAAI,KAApB,IAA6BA,CAAC,IAAI,KAAtC,EAA6C;AACzCxC,cAAAA,CAAC,CAACuB,KAAF,CAAQ;AAAEC,gBAAAA,IAAI,EAAE,yBAAR;AAAmCC,gBAAAA,OAAO,EAAE;AAA5C,eAAR;AACA;AACH;;AACDlB,YAAAA,QAAQ,CAAC4B,CAAC,CAACC,MAAF,CAASG,KAAT,CAAe,CAAf,CAAD,CAAR;AACH;AARD;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAeI;AAAK,QAAA,SAAS,EAAC,mBAAf;AAAA,+BACI;AAAO,UAAA,SAAS,EAAC,oBAAjB;AAAsC,UAAA,IAAI,EAAC,MAA3C;AAAkD,UAAA,WAAW,EAAC;AAA9D;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cAfJ;AAAA;AAAA;AAAA;AAAA;AAAA,YATJ,eA4BI;AAAQ,MAAA,SAAS,EAAC,2BAAlB;AACI,MAAA,OAAO,EAAE,MAAMR,WAAW,EAD9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YA5BJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAqCH,CAxFD;;GAAM7B,U;UACcD,U;;;KADdC,U;AA0FN,eAAeA,UAAf","sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport M from 'materialize-css'\r\nimport { useHistory } from 'react-router-dom'\r\nimport '../../App.css'\r\nconst CreatePost = () => {\r\n    const history = useHistory()\r\n    const [body, setBody] = useState(\"\")\r\n    const [image, setImage] = useState(\"\")\r\n    const [url, setUrl] = useState(\"\")\r\n    useEffect(() => {\r\n        if (url) {\r\n            fetch(\"/createPost\", {\r\n                method: \"post\",\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\",\r\n                    \"Authorization\": \"Bearer \" + localStorage.getItem(\"jwt\")\r\n                },\r\n                body: JSON.stringify({\r\n                    body,\r\n                    pic: url\r\n                })\r\n            }).then(res => res.json())\r\n                .then(data => {\r\n\r\n                    if (data.error) {\r\n                        M.toast({ html: data.error, classes: \"#c62828 red darken-3\" })\r\n                    }\r\n                    else {\r\n                        M.toast({ html: \"Created post Successfully\", classes: \"#43a047 green darken-1\" })\r\n                        history.push('/')\r\n                    }\r\n                }).catch(err => {\r\n                    console.log(err)\r\n                })\r\n        }\r\n    }, [url])\r\n    const postDetails = () => {\r\n        const data = new FormData()\r\n        const unsignedUploadPreset = \"mypreset\" // fictional preset name here\r\n        data.append(\"file\", image)\r\n        data.append(\"upload_preset\", \"insta-clone\")\r\n        data.append(\"cloud_name\", \"dnvtlgaf6\")\r\n        //\r\n        fetch(\"https://api.cloudinary.com/v1_1/dnvtlgaf6/image/upload\", {\r\n            method: \"post\",\r\n            body: data\r\n        })\r\n            .then(res => res.json())\r\n            .then(data => {\r\n                setUrl(data.url)\r\n            })\r\n            .catch(err => {\r\n                console.log(err)\r\n            })\r\n    }\r\n    return (\r\n        <div className=\"card okk input-field\"\r\n        >\r\n            <textarea className=\"textarea card\"\r\n                cols=\"30\" rows=\"5\"\r\n                type=\"text\"\r\n                placeholder=\"Write a caption\"\r\n                value={body}\r\n                onChange={(e) => setBody(e.target.value)}\r\n            />\r\n            <div className=\"file-field input-field\">\r\n                <div className=\"btn #64b5f6 blue darken-1\">\r\n                    <span>Upload Image</span>\r\n                    <input type=\"file\" onChange={(e) => {\r\n                        var file = e.target.files[0];\r\n                        var t = file.type.split('/').pop().toLowerCase();\r\n                        if (t != \"jpeg\" && t != \"jpg\" && t != \"png\") {\r\n                            M.toast({ html: \"Image Format is invalid\", classes: \"#c62828 red darken-3\" })\r\n                            return;\r\n                        }\r\n                        setImage(e.target.files[0])\r\n                    }} />\r\n\r\n\r\n                </div>\r\n                <div className=\"file-path-wrapper\">\r\n                    <input className=\"file-path validate\" type=\"text\" placeholder=\"jpg/jpeg/png\" />\r\n                </div>\r\n            </div>\r\n            <button className=\"btn #64b5f6 blue darken-1\"\r\n                onClick={() => postDetails()}\r\n            >\r\n                Post Image\r\n            </button>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CreatePost\r\n"]},"metadata":{},"sourceType":"module"}